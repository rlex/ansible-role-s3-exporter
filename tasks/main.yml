- name: create s3_exporter system group
  group:
    name: "{{ s3_exporter_user }}"
    system: true
    state: present

- name: create s3_exporter system user
  user:
    name: "{{ s3_exporter_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ s3_exporter_user }}"
    createhome: false

- name: "Download s3_exporter files"
  become: false
  get_url:
    url: "https://github.com/ribbybibby/s3_exporter/releases/download/v{{s3_exporter_version}}/s3_exporter-{{s3_exporter_version}}.linux-amd64.tar.gz"
    dest: "/tmp/"
  delegate_to: localhost

- name: "Create temporary directory"
  become: false
  file:
    path: /tmp/s3_exporter-{{s3_exporter_version}}.linux-amd64
    state: directory
  delegate_to: localhost

- name: "Unarchive s3_exporter files"
  become: false
  unarchive:
    src: "/tmp/s3_exporter-{{s3_exporter_version}}.linux-amd64.tar.gz"
    remote_src: yes
    dest: /tmp/
    creates: "/tmp/s3_exporter-{{s3_exporter_version}}.linux-amd64/s3_exporter"
  delegate_to: localhost
  check_mode: false

- name: propagate s3_exporter binary
  copy:
    src: "/tmp/s3_exporter-{{s3_exporter_version}}.linux-amd64/s3_exporter"
    dest: "/usr/local/bin/s3_exporter"
    mode: 0755
    owner: "{{ s3_exporter_user }}"
    group: "{{ s3_exporter_user }}"
  notify:
    - restart s3 exporter

- name: create systemd service unit
  template:
    src: s3-exporter.service.j2
    dest: /etc/systemd/system/s3-exporter.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart s3 exporter

- name: create env file
  template:
    src: s3-exporter.j2
    dest: /etc/default/s3-exporter
    owner: root
    group: root
    mode: 0644
  notify:
    - restart s3 exporter
